from pandas import read_csv
from pandas import datetime
from matplotlib import pyplot
import statsmodels as sm
from statsmodels.tsa.stattools import adfuller
from statsmodels.graphics.tsaplots import plot_acf, plot_pacf
from statsmodels.tsa.arima_model import ARIMA
import statistics
series = read_csv('sachin.csv', index_col=0, parse_dates=True,  squeeze=True)
#print(series.head())
#print(series.tail())
#print(series.shape)
series.plot()
pyplot.show()
series_diff1 = series.diff().fillna(series)
series_diff1.plot()
pyplot.show()
series_diff2 = series_diff1.diff().fillna(series_diff1)
series_diff2.plot()
pyplot.show()
plot_acf(series_diff1)
pyplot.show()

plot_pacf(series_diff1)
pyplot.show()
A1series = ARIMA(series, order=(5,2,2)).fit(transparams=False)
print(A1series.summary())
from pandas import DataFrame
residuals = DataFrame(A1series.resid)
residuals.plot()
pyplot.show()
residuals.plot(kind='kde')
pyplot.show()
print(residuals.describe())
from sklearn.metrics import mean_squared_error
X = series.values
size = int(len(X) * 0.66)
train, test = X[0:size], X[size:len(X)]
history = [x for x in train]
predictions = list()
for t in range(len(test)):
	model = ARIMA(history, order=(5,1,0))
	model_fit = model.fit(disp=0)
	output = model_fit.forecast()
	yhat = output[0]
	predictions.append(yhat)
	obs = test[t]
	history.append(obs)
	print('predicted=%f, expected=%f' % (yhat, obs))
error = mean_squared_error(test, predictions)
print('Test MSE: %.3f' % error)
# plot
pyplot.plot(test)
pyplot.plot(predictions, color='red')
pyplot.show()
pyplot.plot(test)
pyplot.show()
pyplot.plot(predictions, color='red')
pyplot.show()
